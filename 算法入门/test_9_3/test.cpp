
//位运算
#include<iostream>
using namespace std;
#include<vector>
//136. 只出现一次的数字
//利用异或，即可消除相同的数字
class Solution {
public:
    int singleNumber(vector<int>& nums) {
        int result = 0;
        for (int i = 0; i < nums.size(); i++)
        {
            result ^= nums[i];
        }
        return result;
    }
};

//或
//使用集合存储数字。遍历数组中的每个数字，如果集合中没有该数字，则将该数字加入集合，如果集合中已经有该数字，
//则将该数字从集合中删除，最后剩下的数字就是只出现一次的数字。
//
//使用哈希表存储每个数字和该数字出现的次数。遍历数组即可得到每个数字出现的次数，
//并更新哈希表，最后遍历哈希表，得到只出现一次的数字。
//
//使用集合存储数组中出现的所有数字，并计算数组中的元素之和。由于集合保证元素无重复，
//因此计算集合中的所有元素之和的两倍，即为每个元素出现两次的情况下的元素之和。
//由于数组中只有一个元素出现一次，其余元素都出现两次，因此用集合中的元素之和的两倍减去数组中的元素之和，
//剩下的数就是数组中只出现一次的数字。
